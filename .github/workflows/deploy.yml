# Sample workflow to access AWS resources when workflow is tied to branch
name: AWS example workflow
on: push
# permission can be added at job level or workflow level
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout
jobs:
  GetCallerIdentity:
    runs-on: ubuntu-latest
    environment: ${{ github.base_ref }}
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: "${{ vars.AWS_REGION }}"
          role-to-assume: "${{ vars.ASSUME_ROLE_ARN }}"
          role-session-name: "GithubAction-Session"
      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      - name: Force new deployment
        env:
          ECS_CLUSTER_NAME: ${{ vars.ECS_CLUSTER_NAME }}
          ECS_SERVICE_NAME: ${{ vars.ECS_SERVICE_NAME }}
        run: |
          aws ecs update-service --cluster $ECS_CLUSTER_NAME --service $ECS_SERVICE_NAME --force-new-deployment
